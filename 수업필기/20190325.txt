2019.03.25

[Error Detection/Correction Code]
지금 2계층하는 중.

통신에서의 Error : 보낸 것과 받은것이 다른거

p2
< 에러의 종류 >
Binary Symmetric Channel : 1을 보냈는데 0으로 간다던지, 0을 보냈느데 1로 간다던지 보낸거와 다르게 감.
	--> 일반적으로 에러의 많은 부분을 차지하고 있음.
Binary Erasure Channel : 보낸 데이터가 사라진 것 또한 에러임.

p3
또 다른 분류
Bit Level Error : 0 -> 1 , 1 -> 0
Packet Level Error : 데이터 패킷 소실

왜 패킷이 소실되나?
Input이 멀티플렉스의 제한을 넘어버리면 버퍼에 들어가는데 버퍼가 꽉차게 되면 데이터 소실.
하나이상의 링크를 거쳐갈때 중간에 버퍼 풀이면 데이터 소실.

물론 중간에 노이즈로 인해 데이터가 변경되는 경우도 있음.
그래서 두가지로 구분해서 봄.

p4
Retransmission : error발생시 재전송.
FEC : 송신자가 추가로 정보를 보내서 수신자가 자체 복구. 
	--> delay면에서 비교적 유리(Real time). 그러나 에러가 발생하지 않을 때는 자원이 낭비될 여지는 있음.

순서
bit level error --> FEC --> Retransmission

p6
kbit 데이터. --> 2^k의 정보를 표현 가능.
여기에 (n-k)bit만큼의 추가 정보.
--> nbit의 코드워드.

이때 추가정보는 아무거나 덧붙이는게 아니고 kbit의 정보로 부터 나오는 일대일 함수임.
보내려고 하는 데이터에는 해당하는 함수만이 쓰임.
--> 2^k개의 codewords가 존재.

데이터를 보냈을 때 legal 영역으로 가게되면 탐지하는 것이 불가능.

p8
Parity Code
ex)
k==2인 데이터. --> 네가지 경우
00
01
10
11

Even parity : 1의 숫자가 짝수개가 되게 추가 정보를 덧붙임.
00	-->	000
01	-->	011
10	-->	101
11	--> 	110

다시 p6으로 돌아와서,
전체 3비트를 보내니까 총 8가지 종류의 정보를 보낼수 있는거 같지만 그렇지 않음
추가정보는 실제로 보낼 정보에 일대일로만 생성됨. 

즉, 나머지의 데이터(001,010,100,111)는 illegal codewords임. 

2^(n-k)bits만이 legal codeword임.

이때, 000이라는 데이터가 011로 변형되어 가버리면 legal codeword이므로 탐지하는것이 불가능.
즉, 모든 에러를 detect하는 것은 불가능.

p8
ex) k==3
000 0
001 1
010 1
...
111 1

이런상황에서 
1bit만이 error --> detect 가능
2bit만이 error --> detect 불가능
3bit만이 error --> detect 가능
4bit만이 error --> detect 불가능

4bit codeword 가 no error 일 확률? (1-p)^4
1bit error일 확률? 4C1 * p^1 * (1-p)^3
2bit error일 확률? 4C2 * p^2 * (1-p)^2

결론 : 전체 에러의 확률? 반드시 이해헤야함.

p9
보낼 비트가 9bits
XOR 같으면 0, 다르면 1
--> Even parity를 XOR로 구할 수 있음

각 줄에 대해 XOR연산을 한 값을 추가 정보로 보냄.
그 추가 정보가 맞지 않게 가면 해당하는 줄의 교점을 찾아서 에러를 탐지할 수 있을 뿐만아니라,
correct하게 고칠수도 있음.

p9의 아래 맨 오른쪽 케이스를 보면
꼭 정보데이터비트가 아니라 추가비트인 parity비트도 에러가 남을 알 수 있음.

p10
Hamming Distance : 서로 다른 비트의 수
ex) 
011011
110001
---------
101010  --> Hamming Distance == 3

==> 모든 가능한 코드워드 사이에 해밍디스턴스를 구해서 그 최소값이 코드해밍디스턴스라고 함.
이것이 가지는 의미?

p11
10에서 19사이의 정수를 보내고 싶음
근데 실제 채널을 통해 전송할 수 있는건 어떤 수도 보낼수 있음.
근데 그 채널엔 전송 에러가 있어서 최대 +- 3의 정수가 더해질 수 있음

임의의 산술연산을 통해 인코딩 가능.
--> 그 산술연산에 맞게 디코딩도 가능.
에러가 있음에도 불구하고 제대로 전달하려고 하면?

ex 1)보내려고 하는 값에 100을 곱한뒤 3을 더해서 인코딩하고 디코딩시에 100으로 나누고 floor처리하면
제대로 보내짐.

곱해주는 값을 최소화 하고 싶다면? 
7(==3-(-3)+1)를 해보면 
14 --> 95  96  97  98  99  100  101 	// 14로 인식해야함
15 --> 102 103 104 105 106 107 108 	// 15로 인식해야함
--> 겹치는 수도 없고 7의 간격임.

p12
이걸 해밍디스턴스관점으로 보자.

d==짝수인경우
illegal codeword로 받았다면 가까운쪽으로 해석하는 것이 합리적. --> correct가 가능.
근데 딱 중간은 양쪽이 다 합리적? correct할 수 없는 경우.

즉 일반화하면, 
d==짝수일경우 d/2만큼은 detect가능. 그러나 d/2-1까지만 correct가능.
d==홀수일경우 d/2만큼 detect가능할 뿐만 아니라 correct도 가능.


ex) k==3, even parity
주의) 000 ~ 111로 데이터가 linear하기만 한 것은 아님.
--> Hamming Distance == 2.

해밍 디스턴스의 가치를 이해해야함.

p13
대수학적인 이해를 이해하는 것이 중요. --> 이산시간에 배움.

p14
ex) < R, +, * > : field임.
    < Z, +, * > : field가 아님. inverse를 만족하지 못함

p15
Galois Field == Finite Field(유한 필드)
--> 암호학이나 코딩의 기초가 됨.
집합의 크기라는 개념이 있음. 그 크기가 유한 한 집합.


Z : 셀 수 있는 집합이긴 하지만, 무한 집합임.
Q : 얘도 무한임. 근데 Z와 일대일 매핑이 가능하므로 Z와 같은 레벨의 무한임.
R : 얘도 무한임. 근데 Z보다 높은 레벨의 무한임.

ex) Modoulo 5
모든 덧셈에 관해 닫혀있고 항등원이 0으로 존재. 또한 유니크한 inverse또한 존재.
+) 3 - 4 == 3 + (-4) == 3 + 1 == 4

결론 갈루아 필드? 어떠한 사칙연산에 대해서 가능

이용은 다음 시간에.










